"""Init migrations

Revision ID: 8e5c8b4e62dd
Revises:
Create Date: 2025-08-07 16:08:12.391443

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8e5c8b4e62dd"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("product", sa.Column("id", sa.Uuid(), nullable=False), sa.PrimaryKeyConstraint("id"))
    op.create_table(
        "warehouse",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("code", sa.String(length=10), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "movement",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("movement_id", sa.Uuid(), nullable=False),
        sa.Column("warehouse_id", sa.Uuid(), nullable=True),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("event_type", postgresql.ENUM("arrival", "departure", name="eventtype"), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.CheckConstraint("quantity >= 0", name="check_quantity_non_negative"),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("movement_id", "event_type", name="uq_movement_id_event_type"),
    )
    op.create_table(
        "stock_item",
        sa.Column("warehouse_id", sa.Uuid(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.CheckConstraint("quantity >= 0", name="check_quantity_non_negative"),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["warehouse_id"],
            ["warehouse.id"],
        ),
        sa.PrimaryKeyConstraint("warehouse_id", "product_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("stock_item")
    op.drop_table("movement")
    op.drop_table("warehouse")
    op.drop_table("product")
    # ### end Alembic commands ###
